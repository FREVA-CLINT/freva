name: CI Tests
run-name: ${{ github.actor }} is testing the code

on:
  push:
  pull_request:
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true


jobs:
  docs:
    runs-on: ubuntu-latest
    env:
      NUMEXPR_MAX_THREADS: 8
      GIT_SUBMODULE_STRATEGY: recursive
      DJANGO_ALLOW_ASYNC_UNSAFE: 1
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
    -
      name: Set up Python
      uses: actions/setup-python@v3
    -
      name: Add conda to system path
      run: |
        echo $CONDA/bin >> $GITHUB_PATH
    -
      name: Install freva
      run: |
        conda create -c conda-forge -n docs -y -q freva cartopy make
    -
      name: Set up services
      run: |
        docker-compose up -d --remove-orphans
    -
      name: Preparing docs
      run: |
        conda run -n docs make prepdocs
    -
      name: Creating docs
      run: |
        conda run -n docs make docs
    -
      name: Setup Pages
      uses: actions/configure-pages@v2
    -
      name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        # Upload entire repository
        path: './docs/build/html'
    -
      name: Trigger RTDs build
      uses: dfm/rtds-action@v1
      with:
        webhook_url: ${{ secrets.RTDS_WEBHOOK_URL }}
        webhook_token: ${{ secrets.RTDS_WEBHOOK_TOKEN }}
        commit_ref: ${{ github.ref }}
  test:
    runs-on: ubuntu-latest
    env:
      NUMEXPR_MAX_THREADS: 8
      GIT_SUBMODULE_STRATEGY: recursive
    strategy:
        max-parallel: 4
        matrix:
          python-version: [3.8, 3.9, "3.10"]
    steps:
    -
      name: Ceckout
      uses: actions/checkout@v3
      with:
        submodules: recursive
    -
      name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{matrix.python-versoin}}
    -
      name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    -
      name: Creating conda python ${{ matrix.python-version }} env
      run: |
        conda create -n test -c conda-forge -q -y python=${{matrix.python-version}} xarray netcdf4 gitpython pandoc mysqlclient make
    -
      name: Set up services
      run: |
        docker-compose up -d --remove-orphans
    -
      name: Install dependencies on python ${{matrix.python-version}}
      run: |
        conda run -n test python3 -m pip install -e .[test]
    -
      name: Running tests for python ${{ matrix.python-version }}
      run: |
        conda run -n test make test_coverage
    -
      name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
