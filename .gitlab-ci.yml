stages:
    - build
    - test
    - report

variables:
  CONDA_ENV: "freva-dev"

lint:
  image: continuumio/anaconda3
  stage: build
  tags:
    - docker, specific
  before_script:
    - conda env create -f dev-environment.yml
    - apt update && apt install make
  script:
    - conda run -n $CONDA_ENV make lint

dev-obs:
    stage: build
    image: 
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    script:
        - if [ -n "$CI_COMMIT_BRANCH" ]; then IMAGETAG="$CI_COMMIT_BRANCH"; else IMAGETAG="$CI_COMMIT_SHA"; fi
        - echo $CI_COMMIT_BRANCH
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
        - /kaniko/executor --context $CI_PROJECT_DIR
                       --cleanup
                       --skip-unused-stages=true
                       --build-arg=CI_REGISTRY_IMAGE=${CI_REGISTRY_IMAGE}
                       --build-arg=IMAGETAG=${IMAGETAG}
                       --build-arg=branch=${CI_COMMIT_BRANCH}
                       --build-arg=binder="false"
                       --whitelist-var-run=false
                       --dockerfile $CI_PROJECT_DIR/Dockerfile
                       --destination $CI_REGISTRY_IMAGE/freva_build:$CI_COMMIT_BRANCH
    tags:
        - docker, specific
    rules:
        - if: "$CI_COMMIT_BRANCH == 'master'"
        - if: "$CI_COMMIT_BRANCH != 'master'"

test_latest:
    stage: test
    image: registry.gitlab.dkrz.de/freva/evaluation_system/freva_build:$CI_COMMIT_BRANCH
    variables:
      CONDA: 'Miniconda3-latest'
    tags:
      - docker, specific
    before_script:
      - cp .docker/evaluation_system.conf assets/
    script:
        # Do the unit tests
      - python3 deploy.py /tmp/freva_latest -s --python=3.9 --run_tests --packages pip gitpython pandoc
    artifacts:
      when: always
      reports:
        junit: report.xml
      paths:
        - coverage_report
        - test_results
        - report.xml


pages:
  stage: report
  image: registry.gitlab.dkrz.de/freva/evaluation_system/freva_build:$CI_COMMIT_BRANCH
  tags:
    - docker, specific
  dependencies:
    - test_latest
  before_script:
    - mkdir -p public; cp .docker/index.html public/
    - mv coverage_report public/
  script:
    - /opt/allure/bin/allure generate --clean test_results
  after_script:
    - mv allure-report public/
  artifacts:
    when: always
    paths:
      - public/
    reports:
      junit: report.xml
